paths:
  units:
    get:
      tags:
        - Units
      description: Get a list of units
      parameters:
        - name: accessibility
          in: query
          schema:
            type: string
        - name: unitTypes
          in: query
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: networks
          in: query
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: freshnessScore
          description: Score based on a units engagement level (posts created, comments made, post impressions, post reactions, etc).
          in: query
          style: deepObject
          schema:
            type: object
            properties:
              minimum:
                type: integer
              maximum:
                type: integer
        - name: qualityScore
          description: Score based on how setup a unit is.
          in: query
          style: deepObject
          schema:
            type: object
            properties:
              minimum:
                type: integer
              maximum:
                type: integer
        - name: contentQualityScore
          description: Score based on the quality of the content created by the unit (articles, posts, comments, etc).
          in: query
          style: deepObject
          schema:
            type: object
            properties:
              minimum:
                type: integer
              maximum:
                type: integer
        - name: activityScore
          description: Score based on the frequency that a unit accesses the network.
          in: query
          style: deepObject
          schema:
            type: object
            properties:
              minimum:
                type: integer
              maximum:
                type: integer
      responses:
        200:
          description: A list of units
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
    post:
      tags:
        - Units
      description: Create a new unit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
      responses:
        201:
          description: Unit created
          headers:
            Location:
              description: The API endpoint to hit to get the created unit.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
  unit:
    parameters:
      - $ref: '#/components/parameters/pathUnitId'
    get:
      tags:
        - Units
      description: Get a single unit and its details
      responses:
        200:
          description: Retrieved unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
    put:
      tags:
        - Units
      description: Update a single unit's details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
      responses:
        200:
          description: Unit found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        404:
          description: Unit not found
    delete:
      tags:
        - Units
      description: Delete a unit
      responses:
        204:
          description: Unit deleted
  unitMembers:
    get:
      tags:
        - Members
      description: Get a list of unit members
      parameters:
        - name: 'unitId'
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Users who are members of this unit
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: './users.yml#/components/schemas/User'
                    - type: object
                      properties:
                        authorizationRoles:
                          type: array
                          items:
                            type: string
                        memberRole:
                          type: string
                        memberRoleDescription:
                          type: string
  unitMember:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - Members
      description: Make a user a member of the unit
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: The unit authorization roles to apply to the user.
      responses:
        200:
          description: User added
        404:
          description: User or unit not found
    delete:
      tags:
        - Members
      description: Remove a user from the unit
      responses:
        204:
          description: User removed from unit
        404:
          description: User or unit not found
  unitAuthorizationRoles:
    get:
      tags:
        - Roles
      description: Get the unit authorization roles and permissions
      responses:
        200:
          description: A list of unit's authorization roles and their permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationRole'
    put:
      tags:
        - Roles
      description: Set the unit authorization roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AuthorizationRole'
      responses:
        200:
          description: A list of unit's authorization roles and their permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationRole'
components:
  parameters:
    pathUnitId:
      name: 'unitId'
      in: path
      required: true
      schema:
        type: string
  schemas:
    AuthorizationRole:
      type: object
      properties:
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
            enum:
              - todo
    Unit:
      type: object
      required:
        - name
        - location
      properties:
        uid:
          description: Unique identifier (UUID v4)
          type: string
        name:
          type: string
        location:
          $ref: './locations.yml#/components/schemas/Location'
        unitTypes:
          type: object
          properties:
            contentCreator:
              type: object
            group:
              type: object
            manufacturer:
              type: object
            organization:
              type: object
            retailer:
              type: object
            service:
              type: object
            team:
              $ref: './units_teams.yml#/components/schemas/TeamAttributes'
        networks:
          type: array
          items:
            type: string
        longDescription:
          type: string
        shortDescription:
          type: string
          maxLength: 500
        welcomeMessage:
          type: string
        logo:
          type: object
          properties:
            url:
              type: string
        banner:
          type: object
          properties:
            url:
              type: string
        accessibility:
          type: string
          enum:
            - public
            - private
            - unlisted
            - closed
        vanityUrlPath:
          type: string
        hoursOfOperation:
          type: object
          properties:
            sunday:
              $ref: '#/components/schemas/HoursOfOperation'
            monday:
              $ref: '#/components/schemas/HoursOfOperation'
            tuesday:
              $ref: '#/components/schemas/HoursOfOperation'
            wednesday:
              $ref: '#/components/schemas/HoursOfOperation'
            thursday:
              $ref: '#/components/schemas/HoursOfOperation'
            friday:
              $ref: '#/components/schemas/HoursOfOperation'
            saturday:
              $ref: '#/components/schemas/HoursOfOperation'
        email:
          type: string
        phoneNumber:
          type: string
          pattern: ^\+\d+ \d{3}-\d{3}-\d{4}$
        website:
          type: string
        activityScore:
          type: integer
          minimum: 1
          maximum: 100
        freshnessScore:
          type: integer
          minimum: 1
          maximum: 100
        qualityScore:
          type: integer
          minimum: 1
          maximum: 100
        contentQualityScore:
          type: integer
          minimum: 1
          maximum: 100
        # metadata:
        #   oneOf:
        #     - description: team
        #       type: object
        #       properties:
        #         recruiting:
        #           type: boolean
        #         recruitingMessage:
        #           type: string
        #         recrutingMinimumAge:
        #           type: integer
        #           minimum: 0
        #     - description: retailer
        #       type: object
        #       properties:
        #         hasOnlineStore:
        #           type: boolean
        #         hasPhysicalStore:
        #           type: boolean
    HoursOfOperation:
      type: array
      items:
        type: object
        properties:
          open:
            $ref: '#/components/schemas/Time'
          close:
            $ref: '#/components/schemas/Time'
    Time:
      type: string
      description: Stored as military time.
      pattern: ^\d{2}:\d{2}$


