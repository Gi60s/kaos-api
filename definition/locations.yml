paths:
  locations:
    get:
      tags:
        - Locations
      description: Get a list of all locations.
      responses:
        200:
          description: All locations.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Location'
                    - type: object
                      properties:
                        units:
                          type: array
                          items:
                            type: object
                            properties:
                              uid:
                                $ref: './units.yml#/components/schemas/UnitBasic/properties/uid'
                              name:
                                $ref: './units.yml#/components/schemas/UnitBasic/properties/name'
                              shortDescription:
                                $ref: './units.yml#/components/schemas/UnitBasic/properties/shortDescription'
                              logo:
                                $ref: './units.yml#/components/schemas/UnitBasic/properties/logo'
                        users:
                          type: array
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                uid:
                                  $ref: './users.yml#/components/schemas/UserBasic/properties/uid'
                                displayName:
                                  $ref: './users.yml#/components/schemas/UserBasic/properties/displayName'
                                avatar:
                                  $ref: './users.yml#/components/schemas/UserBasic/properties/avatar'
                                firstName:
                                  $ref: './users.yml#/components/schemas/UserPersonal/properties/firstName'
                                lastName:
                                  $ref: './users.yml#/components/schemas/UserPersonal/properties/lastName'
  location:
    parameters:
      - $ref: '#/components/parameters/locationId'
    get:
      tags:
        - Locations
      description: Get a specific location.
      responses:
        200:
          description: A single location.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Location'
                  - type: object
                    properties:
                      units:
                        type: array
                        items:
                          $ref: './units.yml#/components/schemas/UnitBasic'
  locationUnits:
    parameters:
      - $ref: '#/components/parameters/locationId'
    get:
      tags:
        - Locations
      description: Get the units at a specific location.
      responses:
        200:
          description: A single location and its units.
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    $ref: '#/components/schemas/Location'
                  units:
                    type: array
                    items:
                      $ref: './units.yml#/components/schemas/Unit'
components:
  schemas:
    Location:
      type: object
      required:
      - locationId
      - latitude
      - longitude
      properties:
        uid:
          $ref: './common.yml#/Uid2'
        addressLine1:
          type: string
          example: 1234 Mountain St
        addressLine2:
          type: string
        addressLine4:
          type: string
        addressLine5:
          type: string
        country:
          type: string
          example: USA
        displayName:
          type: string
        latitude:
          $ref: '#/components/schemas/Latitude'
        locality:
          type: string
          example: Provo
        longitude:
          $ref: '#/components/schemas/Longitude'
        postalCode:
          type: string
          example: '84606'
        province:
          type: string
          example: UT
    Latitude:
      type: number
      minimum: -90
      maximum: 90
    Longitude:
      type: number
      minimum: -180
      maximum: 180
    LongLat:
      type: object
      required:
      - latitude
      - longitude
      properties:
        latitude:
          $ref: '#/components/schemas/Latitude'
        longitude:
          $ref: '#/components/schemas/Longitude'
  parameters:
    locationId:
      name: locationId
      in: path
      required: true
      schema:
        type: string