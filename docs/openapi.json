{
  "openapi": "3.0.2",
  "info": {
    "title": "KAOS",
    "version": "0.0.1"
  },
  "x-tagGroups": [
    {
      "name": "User Management",
      "tags": [
        "Users"
      ]
    },
    {
      "name": "Unit Management",
      "tags": [
        "Locations",
        "Members",
        "Roles",
        "Teams",
        "Units"
      ]
    }
  ],
  "paths": {
    "/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "description": "Get a list of all locations.",
        "responses": {
          "200": {
            "description": "All locations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1locations~1%7BlocationId%7D/get/responses/200/content/application~1json/schema"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationId}": {
      "parameters": [
        {
          "name": "locationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Locations"
        ],
        "description": "Get a specific location.",
        "responses": {
          "200": {
            "description": "A single location.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "locationId",
                    "latitude",
                    "longitude"
                  ],
                  "properties": {
                    "locationId": {
                      "type": "string"
                    },
                    "addressLine1": {
                      "type": "string",
                      "example": "1234 Mountain St"
                    },
                    "addressLine2": {
                      "type": "string"
                    },
                    "addressLine4": {
                      "type": "string"
                    },
                    "addressLine5": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string",
                      "example": "USA"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "latitude": {
                      "type": "number",
                      "minimum": -90,
                      "maximum": 90
                    },
                    "locality": {
                      "type": "string",
                      "example": "Provo"
                    },
                    "longitude": {
                      "type": "number",
                      "minimum": -180,
                      "maximum": 180
                    },
                    "postalCode": {
                      "type": "string",
                      "example": "84606"
                    },
                    "province": {
                      "type": "string",
                      "example": "UT"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{locationId}/units": {
      "parameters": [
        {
          "$ref": "#/paths/~1locations~1%7BlocationId%7D/parameters/0"
        }
      ],
      "get": {
        "tags": [
          "Locations"
        ],
        "description": "Get the units at a specific location.",
        "responses": {
          "200": {
            "description": "A single location and its units.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "$ref": "#/paths/~1locations~1%7BlocationId%7D/get/responses/200/content/application~1json/schema"
                    },
                    "units": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/units": {
      "get": {
        "tags": [
          "Units"
        ],
        "description": "Get a list of units",
        "parameters": [
          {
            "name": "accessibility",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unitTypes",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "networks",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "freshnessScore",
            "description": "Score based on a units engagement level (posts created, comments made, post impressions, post reactions, etc).",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "minimum": {
                  "type": "integer"
                },
                "maximum": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "qualityScore",
            "description": "Score based on how setup a unit is.",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "minimum": {
                  "type": "integer"
                },
                "maximum": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "contentQualityScore",
            "description": "Score based on the quality of the content created by the unit (articles, posts, comments, etc).",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "minimum": {
                  "type": "integer"
                },
                "maximum": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "activityScore",
            "description": "Score based on the frequency that a unit accesses the network.",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "minimum": {
                  "type": "integer"
                },
                "maximum": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of units",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Units"
        ],
        "description": "Create a new unit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "location"
                ],
                "properties": {
                  "uid": {
                    "description": "Unique identifier (UUID v4)",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "location": {
                    "$ref": "#/paths/~1locations~1%7BlocationId%7D/get/responses/200/content/application~1json/schema"
                  },
                  "unitTypes": {
                    "type": "object",
                    "properties": {
                      "contentCreator": {
                        "type": "object"
                      },
                      "group": {
                        "type": "object"
                      },
                      "manufacturer": {
                        "type": "object"
                      },
                      "organization": {
                        "type": "object"
                      },
                      "retailer": {
                        "type": "object"
                      },
                      "service": {
                        "type": "object"
                      },
                      "team": {
                        "$ref": "#/paths/~1units~1%7BunitId%7D~1teams/put/requestBody/content/application~1json/schema"
                      }
                    }
                  },
                  "networks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "longDescription": {
                    "type": "string"
                  },
                  "shortDescription": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "welcomeMessage": {
                    "type": "string"
                  },
                  "logo": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "banner": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "accessibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private",
                      "unlisted",
                      "closed"
                    ]
                  },
                  "vanityUrlPath": {
                    "type": "string"
                  },
                  "hoursOfOperation": {
                    "type": "object",
                    "properties": {
                      "sunday": {
                        "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema/properties/hoursOfOperation/properties/friday"
                      },
                      "monday": {
                        "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema/properties/hoursOfOperation/properties/friday"
                      },
                      "tuesday": {
                        "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema/properties/hoursOfOperation/properties/friday"
                      },
                      "wednesday": {
                        "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema/properties/hoursOfOperation/properties/friday"
                      },
                      "thursday": {
                        "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema/properties/hoursOfOperation/properties/friday"
                      },
                      "friday": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "Stored as military time.",
                              "pattern": "^\\d{2}:\\d{2}$"
                            },
                            "close": {
                              "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema/properties/hoursOfOperation/properties/sunday/items/properties/open"
                            }
                          }
                        }
                      },
                      "saturday": {
                        "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema/properties/hoursOfOperation/properties/friday"
                      }
                    }
                  },
                  "email": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "pattern": "^\\+\\d+ \\d{3}-\\d{3}-\\d{4}$"
                  },
                  "website": {
                    "type": "string"
                  },
                  "activityScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "freshnessScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "qualityScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "contentQualityScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Unit created",
            "headers": {
              "Location": {
                "description": "The API endpoint to hit to get the created unit.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema"
                }
              }
            }
          }
        }
      }
    },
    "/units/{unitId}": {
      "parameters": [
        {
          "name": "unitId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Units"
        ],
        "description": "Get a single unit and its details",
        "responses": {
          "200": {
            "description": "Retrieved unit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Units"
        ],
        "description": "Update a single unit's details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unit found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "404": {
            "description": "Unit not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Units"
        ],
        "description": "Delete a unit",
        "responses": {
          "204": {
            "description": "Unit deleted"
          }
        }
      }
    },
    "/units/{unitId}/members": {
      "get": {
        "tags": [
          "Members"
        ],
        "description": "Get a list of unit members",
        "parameters": [
          {
            "name": "unitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users who are members of this unit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/paths/~1users/post/requestBody/content/application~1json/schema"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "authorizationRoles": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "memberRole": {
                            "type": "string"
                          },
                          "memberRoleDescription": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/units/{unitId}/members/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "tags": [
          "Members"
        ],
        "description": "Make a user a member of the unit",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The unit authorization roles to apply to the user."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User added"
          },
          "404": {
            "description": "User or unit not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "description": "Remove a user from the unit",
        "responses": {
          "204": {
            "description": "User removed from unit"
          },
          "404": {
            "description": "User or unit not found"
          }
        }
      }
    },
    "/units/{unitId}/authorizatonRoles/{userId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "Get the unit authorization roles and permissions",
        "responses": {
          "200": {
            "description": "A list of unit's authorization roles and their permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1units~1%7BunitId%7D~1authorizatonRoles~1%7BuserId%7D/put/requestBody/content/application~1json/schema/items"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "Set the unit authorization roles",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "todo"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of unit's authorization roles and their permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1units~1%7BunitId%7D~1authorizatonRoles~1%7BuserId%7D/put/requestBody/content/application~1json/schema/items"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/units/{unitId}/teams": {
      "parameters": [
        {
          "$ref": "#/paths/~1units~1%7BunitId%7D/parameters/0"
        }
      ],
      "put": {
        "tags": [
          "Teams"
        ],
        "description": "Set team attributes for the unit.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recruiting": {
                    "type": "boolean"
                  },
                  "recruitingMessage": {
                    "type": "string"
                  },
                  "recrutingMinimumAge": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A list of teams",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1units/post/requestBody/content/application~1json/schema"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teams"
        ],
        "description": "Remove the team unit type from the unit.",
        "responses": {
          "204": {
            "description": "Team removed"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get a list of users",
        "parameters": [
          {
            "name": "accessibility",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "freshnessScore",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "minimum": {
                  "type": "integer"
                },
                "maximum": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "qualityScore",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "minimum": {
                  "type": "integer"
                },
                "maximum": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "name": "contentQualityScore",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "minimum": {
                  "type": "integer"
                },
                "maximum": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users/post/requestBody/content/application~1json/schema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "displayName",
                  "location"
                ],
                "properties": {
                  "uid": {
                    "description": "Unique identifier (UUID v4)",
                    "type": "string"
                  },
                  "birthdate": {
                    "type": "string",
                    "format": "date"
                  },
                  "identifyVerified": {
                    "type": "boolean"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "location": {
                    "$ref": "#/paths/~1locations~1%7BlocationId%7D/get/responses/200/content/application~1json/schema"
                  },
                  "networks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "longDescription": {
                    "type": "string"
                  },
                  "shortDescription": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "avatar": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "accessibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private"
                    ]
                  },
                  "vanityUrlPath": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "freshnessScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "qualityScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "contentQualityScore": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Unit created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users/post/requestBody/content/application~1json/schema"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get a single user and its details",
        "responses": {
          "200": {
            "description": "Retrieved user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users/post/requestBody/content/application~1json/schema"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update a single user's details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/paths/~1users/post/requestBody/content/application~1json/schema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users/post/requestBody/content/application~1json/schema"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a user",
        "responses": {
          "204": {
            "description": "User deleted"
          }
        }
      }
    }
  }
}